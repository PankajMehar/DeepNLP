
In survival analysis, the goal is to estimate the occurrence time and the risk of an unfavorable event
in the future (e.g, death of a patient) that can inform our decisions at present time (e.g., help to
select a treatment). The classical models for this task are the Aalen’s additive model [1] and the
Cox’s proportional hazard model [2], which linearly regress attributes of a patient to the hazard
function. While suitable for comparing populations of patients, these models were not designed for
patient-speciﬁc prediction. By reformulating survival analysis as a multi-task classiﬁcation problem,
Yu et al. [3] show that a set of temporally ordered linear classiﬁers provides much more accurate
predictions.
Here, we follow the same classiﬁcation approach and show that using deep learning methods further
improves predictive performance on survival data. While promising, straightforward use of neural
networks leads to black-box predictors that lack transparency offered by the linear models. To
overcome this issue, we employ contextual explanation networks [CEN, 4]—a class of models that
learn to predict by generating and leveraging intermediate explanations. Explanations here are deﬁned
as instance-speciﬁc simple (linear) models that not only help to interpret predictions but are selected
by the network to make predictions for each patient at each time interval. CENs can be based on
arbitrary deep architectures and can process a variety of input data modalities while interpreting
predictions in terms of selected attributes. As we demonstrate in experiments, this approach attains
both the best performance as well as interpretability.
2 Background
First, we present the setup used by Yu et al. [3]. The data is represented by patient-speciﬁc attributes,
X, and the times of the occurance of event, T. These times are converted into m-dimensional binary
vectors, Y := (y1, . . . , ym), that indicate the corresponding follow up time. If the death occurred
at time t ∈ [ti, ti+1), then yj = 0, ∀j ≤ i and yk = 1, ∀k > i. If the data point was censored (i.e.,
Machine Learning for Healthcare (ML4H) Workshop, NIPS 2017, Long Beach, CA, USA.
t ∈ [t2, t3)
θ3
θ2
y2
x2
h2
y3
x3
h3
θ1
y1
x1
h1
t ∈ [t2, t3)
θ3
θ2
y2
x2
h2
y3
x3
h3
θ1
y1
x1
h1
c1
c2
c3
h1
h2
h3
(a) Architecture used for SUPPORT2
(b) Architecture used for PhysioNet
Figure 1: CEN architectures used in our survival analysis experiments. Context encoders were time-distributed
single hidden layer MLP (a) and LSTM (b) that produced inputs for another LSTM over the output time intervals
(denoted with h1, h2, h3 hidden states respectively). Each hidden state of the output LSTM was used to generate
the corresponding θt that were further used to construct the log-likelihood for CRF.
we lack information for times after t ∈ [ti, ti+1)), the targets (yi+1, . . . , ym) are regarded as latent
variables. Note that only m + 1 sequences are valid, i.e., assigned non-zero probability by the model,
which allows to write the following linear model:
p(Y = (y1, . . . , ym) | x, Θ) =
exp(cid:0)(cid:80)m
k=0 exp(cid:0)(cid:80)m
(cid:80)m
t=1 ytx(cid:62)θt(cid:1)
t=k+1 x(cid:62)θt(cid:1)
The model is trained by optimizing a regularized log likelihood w.r.t. Θ := {θt}m
t=1. After training,
we get a set of linear models, one for each time interval, used for predicting the survival probability.
(1)
3 Contextual Explanation Networks for Survival Analysis
Here, we take the same structured prediction approach but consider a slightly different setup. In
particular, we assume that each data instance (patient record) is represented by three variables: the
context, C, the attributes, X, and the targets, Y. Our goal is to learn a model, pw(Y | X, C),
parametrized by w that can predict Y from X and C. Note that inputs have two representations, X
and C, where X is a set of attributes that will be used to interpret predictions1. Contextual explanation
networks (CENs) are deﬁned as models that assume the following form:
Y ∼ p(Y | X, θ),
θ ∼ pw(θ | C),
pw(Y | X, C) =
(2)
where p(Y | X, θ) is a predictor parametrized by θ. Such predictors are called explanations, since
they explicitly relate interpretable variables, X, to the targets, Y. The conditional distribution
pw(θ | C) is called the context encoder processes the context representation, C, and generates
parameters for the explanation, θ.
For survival analysis, we want explanations to be in the form of linear CRFs as given in (1). Hence,
our contextual networks with CRF-based explanations are deﬁned as follows:
p(Y | X, θ)pw(θ | C)dθ
(cid:90)
θt ∼ pw(θt | C), t ∈ {1, . . . , m}, Y ∼ p(Y | X, θ1:m),
p(Y = (y1, y2, . . . , ym) | x, θ1:m) ∝ exp
pw(θt | C) := δ(θt, φt
w,D(c)), φt
t=1
(cid:40) m(cid:88)
yi(x(cid:62)θt) + ω(yt, yt+1)
(3)
w,D(c) := α(ht)(cid:62)D, ht := RNN(ht−1, c)
(cid:41)
A few things to note here. First, the model generates explanations for each patient and for each
time interval. Second, depending on the nature of the context representation, C, CENs process it
1It is common to have the data to be of multiple representations some of which are low-level or unstructured
(e.g., image pixels, sensory inputs), and other are high-level or human-interpretable (e.g., categorical variables).
To ensure interpretability, we would like to use deep networks to process the low-level representation (the
context) and construct explanations as context-speciﬁc probabilistic models on the high-level features.
and generate θt for each time step using a recurrent encoder (Figure 1). We use a deterministic
RNN-based encoder, φt, that selects parameters for explanations from a global dictionary, D, using
soft attention (for details on dictionary-based context encoding, see [4]). Finally, the potentials
between attributes, x, and targets, y1:m, are linear functions parameterized by θ1:m; the pairwise
potentials between targets, ω(yi, yi+1), ensure that conﬁgurations (yi = 1, yi+1 = 0) are improbable
(i.e., ω(1, 0) = −∞ and ω(0, 0) = ω00, ω(0, 1) = ω01, ω(1, 1) = ω10 are learnable parameters).
Given these constraints, the likelihood of an uncensored event at time t ∈ [tj, tj+1) is
(cid:41)
x(cid:62)θi
(cid:40) m(cid:88)
(cid:40) m(cid:88)
i=k+1
exp
(cid:41)
x(cid:62)θi
 m(cid:88)
(cid:40) m(cid:88)
i=j

k=0
exp
(cid:44) m(cid:88)
(cid:41)(cid:44) m(cid:88)
(cid:88)
k=0
j∈C
m(cid:88)
(cid:88)
i∈NC
p(T = t | x, Θ) = exp
x(cid:62)θi
and the likelihood of an event censored at time t ∈ [tj, tj+1) is
p(T ≥ t | x, Θ) =
exp
x(cid:62)θi
k=j+1
i=k+1
i=k+1
The joint log-likelihood of the data consists of two parts:
p(T = ti | xi, Θ) +
L(Y, X; Θ) =
p(T > tj | xj, Θ)
(4)
(5)
(6)
where NC is the set of non-censored instances (for which we know the outcome times, ti) and C
is the set of censored instances (for which only know the censorship times, tj). The objective is
optimized using stochastic gradient descent. See [4] for more details.
4 Experiments
In our experiments, we consider the datasets, models, and metrics as described below. We compare
CENs with a number of baselines quantitatively as well as visualize the learned explanations.
Datasets. We use two publicly available datasets for survival analysis of of the intense care unit
(ICU) patients: (a) SUPPORT22, and (b) data from the PhysioNet 2012 challenge3. The data was
preprocessed and used as follows:
• SUPPORT2: The data had 9105 patient records and 73 variables. We selected 50 variables for
both C and X features. Categorical features (such as race or sex) were one-hot encoded. The
values of all features were non-negative, and we ﬁlled the missing values with -1. For CRF-based
predictors, the survival timeline was capped at 3 years and converted into 156 discrete intervals
of 7 days each. We used 7105 patient records for training, 1000 for validation, and 1000 for
testing.
• PhysioNet: The data had 4000 patient records, each represented by a 48-hour irregularly
sampled 37-dimensional time-series of different measurements taken during the patient’s stay at
the ICU. We resampled and mean-aggregated the time-series at 30 min frequency. This resulted
in a large number of missing values that we ﬁlled with 0. The resampled time-series were used as
the context, C, while for the attributes, X, we took the values of the last available measurement
for each variable in the series. For CRF-based predictors, the survival timeline was capped at 60
days and converted into 60 discrete intervals.
Models. For baselines, we use the classical Aalen and Cox models and the CRF from [3], where all
used X as inputs. Next, we combine CRFs with neural encoders in two ways:
(i) We apply CRFs to the outputs from the neural encoders (denoted MLP-CRF and LSTM-CRF,
all trainable end-to-end). Similar models have been show very successful in the natural language
applications [5]. Note that parameters of the CRF layer assign weights to the latent features and
are no longer interpretable in terms of the attributes of interest.
(ii) We use CENs with CRF-based explanations, that process the context variables, C, using the
same neural networks as in (i) and output parameters for CRFs that act on the attributes, X.
2http://biostat.mc.vanderbilt.edu/wiki/Main/DataSets.
3https://physionet.org/challenge/2012/.
Table 1: Performance of the classical Cox and Aalen models, CRF-based models, and CENs that use LSTM or
MLP for context embedding and CRF for explanations. The numbers are averages from 5-fold cross-validation;
the std. are on the order of the least signiﬁcant digit. @K denotes the temporal quantile, i.e., the time point such
that K% of the patients in the data have died or were censored before that point.
SUPPORT2
PhysioNet Challenge 2012
Model
Acc@25
Acc@50
Acc@75
RAE Model
Acc@25
Acc@50
Acc@75
RAE
Cox
Aalen
CRF
MLP-CRF
MLP-CEN
84.1
87.1
84.4
87.7
85.5
73.7
66.2
89.3
89.6
47.6
45.8
79.2
80.1
0.90
0.98
0.59
0.62
Cox
Aalen
CRF
LSTM-CRF
93.0
93.3
93.2
93.9
69.6
78.7
85.1
86.3
49.1
57.1
65.6
68.1
0.24
0.31
0.14
0.11
90.8
81.9
0.56
LSTM-CEN
94.8
87.5
70.1
0.09
Figure 2: Weights of the CEN-generated CRF explanations for two patients from SUPPORT2 dataset for a set of
the most inﬂuential features: dementia (comorbidity), avtisst (avg. TISS, days 3-25), slos (days from study
entry to discharge), hday (day in hospital at study admit), ca yes (the patient had cancer), sfdm2 Coma or
Intub (intubated or in coma at month 2), sfdm2 SIP (sickness impact proﬁle score at month 2). Higher weight
values correspond to higher feature contributions to the risk of death after a given time point.
Metrics. Following Yu et al. [3], we use two metrics speciﬁc to
survival analysis: (a) accuracy of correctly predicting survival
of a patient at times that correspond to 25%, 50%, and 75%
population-level temporal quantiles (i.e., time points such that
the corresponding percentage of the patients in the data had
their time of the last follow up prior to that due to censorship
or death) and (b) the relative absolute error (RAE) between the
predicted and actual time of death for non-censored patients.
Quantitative results. The results for all models are given in
Table 1. Our implementation of the CRF baseline reproduces
(and even slightly improves) the performance reported by Yu et
al. [3]. CRFs built on representations learned by deep networks
(MLP-CRF and LSTM-CRF models) improve upon the plain
CRFs but, as we noted, can no longer be interpreted in terms
of the original variables. On the other hand, CENs outperform
neural CRF models on certain metrics (and closely match
on the others) while providing explanations for the survival
Figure 3: CEN-predicted survival curves
for 500 random patients from SUP-
PORT2 test set. Color indicates death
within 1 year after leaving the hospital.
probability predictions for each patient at each point in time.
Qualitative results. To inspect predictions of CENs qualitatively, for any given patient, we can
visualize the weights assigned by the corresponding explanation to the respective attributes at each
time interval. Figure 2 shows explanation weights for a subset of the most inﬂuential features for
two patients from SUPPORT2 dataset who were predicted as survivor and non-survivor. These
explanations allow us to better understand patient-speciﬁc temporal dynamics of the contributing
factors to the survival rates predicted by the model (Figure 3). This information can be used for
model diagnostics (i.e., help us understand whether we can trust a particular prediction) and as more
ﬁne-grained information useful for decision support.
01020304050Time after leaving hospital (weeks)sfdm2_SIP>=30sfdm2_Coma or Intubca_yeshdayslosavtisstdementiaPatient ID: 3520 (Died)01020304050Time after leaving hospital (weeks)Patient ID: 1100 (Survived)4202402550Time after leaving hospital (weeks)0.00.20.40.60.81.0Survival probabilitySurvivedDiedReferences
[1] O.O. Aalen. “A linear regression model for the analysis of life time”. In: Statistics in Medicine,
8(8):907–925 (1989).
[2] DR Cox. “Regression Models and Life-Tables”. In: Journal of the Royal Statistical Society.
Series B (Methodological) (1972), pp. 187–220.
[3] Chun-Nam Yu, Russell Greiner, Hsiu-Chin Lin & Vickie Baracos. “Learning patient-speciﬁc
cancer survival distributions as a sequence of dependent regressors”. In: Advances in Neural
Information Processing Systems. 2011, pp. 1845–1853.
[4] Maruan Al-Shedivat, Avinava Dubey & Eric P Xing. “Contextual Explanation Networks”. In:
arXiv preprint arXiv:1705.10301 (2017).
[5] Ronan Collobert, Jason Weston, Léon Bottou, Michael Karlen, Koray Kavukcuoglu & Pavel
Kuksa. “Natural language processing (almost) from scratch”. In: Journal of Machine Learning
Research 12.Aug (2011).
